{"version":3,"sources":["Result.tsx","utils/calculator.ts","Button.tsx","Keyboard.tsx","Calculator.tsx","serviceWorker.ts","index.tsx"],"names":["Result","props","Object","core_browser_esm","css","_templateObject","_templateObject2","result","BUTTON","STATE","ButtonToString","_ButtonToString","defineProperty","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","DOT","ButtonType","Operations","_Operations","DIVIDE","prevValue","nextValue","MULTIPLY","ADD","SUBTRACT","enteringOperation","state","button","objectSpread","currentState","ENTERING_SECOND","secondNumber","CLEAR","ENTERING_FIRST","firstNumber","OPERATION","operation","PLUSMINUS","substring","enteringSecond","PERCENT","parseFloat","toString","EQUALS","answer","ANSWER","runEquals","nextState","enteringFirst","Button","background","color","type","ACTION","onClick","onPress","Button_templateObject","children","KeyboardRow","Keyboard_templateObject","Keyboard","Keyboard_templateObject2","Calculator","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","key","evt","setState","onKeyPress","keyMap","0","1","2","3","4","5","6","7","8","9","+","-","*","/","%","=","Enter","Escape","undefined","document","addEventListener","removeEventListener","Calculator_templateObject","displayResult","PureComponent","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","react_default","a","createElement","src_Calculator","getElementById","URL","process","href","origin","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4e66fd70.chunk.js","sourcesContent":["import React from \"react\";\n/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\n\nexport default function Result(props: { result?: number | string }) {\n  return (\n    <div\n      css={css`\n        width: 100%;\n        background: #fff9f9;\n        color: #444;\n      `}\n    >\n      <div\n        css={css`\n          width: 100%;\n          height: 80px;\n          border: 0;\n          font-size: 30px;\n          padding: 20px 5px;\n          text-align: right;\n          display: flex;\n          align-items: baseline;\n          justify-content: flex-end;\n          overflow: hidden;\n        `}\n      >\n        {props.result}\n      </div>\n    </div>\n  );\n}\n","export enum BUTTON {\n  ZERO,\n  ONE,\n  TWO,\n  THREE,\n  FOUR,\n  FIVE,\n  SIX,\n  SEVEN,\n  EIGHT,\n  NINE,\n  DIVIDE,\n  MULTIPLY,\n  ADD,\n  SUBTRACT,\n  PLUSMINUS,\n  PERCENT,\n  CLEAR,\n  EQUALS,\n  DOT\n}\n\nconst ButtonToString = {\n  [BUTTON.ZERO]: \"0\",\n  [BUTTON.ONE]: \"1\",\n  [BUTTON.TWO]: \"2\",\n  [BUTTON.THREE]: \"3\",\n  [BUTTON.FOUR]: \"4\",\n  [BUTTON.FIVE]: \"5\",\n  [BUTTON.SIX]: \"6\",\n  [BUTTON.SEVEN]: \"7\",\n  [BUTTON.EIGHT]: \"8\",\n  [BUTTON.NINE]: \"9\",\n  [BUTTON.DOT]: \".\"\n};\n\nexport enum STATE {\n  ENTERING_FIRST,\n  OPERATION,\n  ENTERING_SECOND,\n  ANSWER\n}\n\nexport interface State {\n  currentState: STATE;\n  operation?: BUTTON;\n  firstNumber: string;\n  secondNumber?: string;\n  answer?: number;\n}\n\nconst Operations: {\n  [op: number]: (prevValue: number, nextValue: number) => number;\n} = {\n  [BUTTON.DIVIDE]: (prevValue: number, nextValue: number) =>\n    prevValue / nextValue,\n  [BUTTON.MULTIPLY]: (prevValue: number, nextValue: number) =>\n    prevValue * nextValue,\n  [BUTTON.ADD]: (prevValue: number, nextValue: number) => prevValue + nextValue,\n  [BUTTON.SUBTRACT]: (prevValue: number, nextValue: number) =>\n    prevValue - nextValue\n};\n\nfunction runEquals(state: State, button: BUTTON) {\n  if (state.operation && state.firstNumber && state.secondNumber) {\n    const answer = Operations[state.operation](\n      parseFloat(state.firstNumber),\n      parseFloat(state.secondNumber)\n    );\n    return {\n      currentState: STATE.ANSWER,\n      operation: button == BUTTON.EQUALS ? state.operation : button,\n      answer,\n      firstNumber: answer.toString(),\n      secondNumber: \"\"\n    };\n  } else {\n    return state;\n  }\n}\n\nfunction enteringFirst(state: State, button: BUTTON) {\n  switch (button) {\n    case BUTTON.ZERO:\n    case BUTTON.ONE:\n    case BUTTON.TWO:\n    case BUTTON.THREE:\n    case BUTTON.FOUR:\n    case BUTTON.FIVE:\n    case BUTTON.SIX:\n    case BUTTON.SEVEN:\n    case BUTTON.EIGHT:\n    case BUTTON.NINE:\n    case BUTTON.DOT:\n      return {\n        currentState: STATE.ENTERING_FIRST,\n        firstNumber: state.firstNumber + ButtonToString[button]\n      };\n    case BUTTON.CLEAR:\n      return {\n        currentState: STATE.ENTERING_FIRST,\n        firstNumber: \"\"\n      };\n    case BUTTON.PERCENT:\n      return {\n        ...state,\n        currentState: STATE.ENTERING_FIRST,\n        firstNumber: (parseFloat(state.firstNumber) / 100).toString()\n      };\n    case BUTTON.PLUSMINUS:\n      return {\n        ...state,\n        currentState: STATE.ENTERING_FIRST,\n        firstNumber:\n          state.firstNumber.substring(0, 1) === \"-\"\n            ? state.firstNumber.substring(1)\n            : \"-\" + state.firstNumber\n      };\n    case BUTTON.ADD:\n    case BUTTON.MULTIPLY:\n    case BUTTON.SUBTRACT:\n    case BUTTON.DIVIDE:\n      return {\n        currentState: STATE.OPERATION,\n        operation: button,\n        firstNumber: state.firstNumber\n      };\n    default:\n      return state;\n  }\n}\n\nfunction enteringOperation(state: State, button: BUTTON) {\n  switch (button) {\n    case BUTTON.ZERO:\n    case BUTTON.ONE:\n    case BUTTON.TWO:\n    case BUTTON.THREE:\n    case BUTTON.FOUR:\n    case BUTTON.FIVE:\n    case BUTTON.SIX:\n    case BUTTON.SEVEN:\n    case BUTTON.EIGHT:\n    case BUTTON.NINE:\n    case BUTTON.DOT:\n      return {\n        ...state,\n        currentState: STATE.ENTERING_SECOND,\n        secondNumber: ButtonToString[button]\n      };\n    case BUTTON.CLEAR:\n      return {\n        currentState: STATE.ENTERING_FIRST,\n        firstNumber: \"\"\n      };\n    case BUTTON.ADD:\n    case BUTTON.MULTIPLY:\n    case BUTTON.SUBTRACT:\n    case BUTTON.DIVIDE:\n      return {\n        ...state,\n        currentState: STATE.OPERATION,\n        operation: button\n      };\n    case BUTTON.PLUSMINUS:\n      return {\n        ...state,\n        currentState: STATE.OPERATION,\n        firstNumber:\n          state.firstNumber && state.firstNumber.substring(0, 1) === \"-\"\n            ? state.firstNumber.substring(1)\n            : \"-\" + state.firstNumber\n      };\n    default:\n      return state;\n  }\n}\n\nfunction enteringSecond(state: State, button: BUTTON) {\n  switch (button) {\n    case BUTTON.ZERO:\n    case BUTTON.ONE:\n    case BUTTON.TWO:\n    case BUTTON.THREE:\n    case BUTTON.FOUR:\n    case BUTTON.FIVE:\n    case BUTTON.SIX:\n    case BUTTON.SEVEN:\n    case BUTTON.EIGHT:\n    case BUTTON.NINE:\n    case BUTTON.DOT:\n      return {\n        ...state,\n        currentState: STATE.ENTERING_SECOND,\n        secondNumber: (state.secondNumber || \"\") + ButtonToString[button]\n      };\n    case BUTTON.CLEAR:\n      return {\n        ...state,\n        currentState: STATE.ENTERING_SECOND,\n        secondNumber: \"\"\n      };\n    case BUTTON.PERCENT:\n      return {\n        ...state,\n        currentState: STATE.ENTERING_SECOND,\n        secondNumber: (parseFloat(state.secondNumber || \"\") / 100).toString()\n      };\n    case BUTTON.PLUSMINUS:\n      return {\n        ...state,\n        currentState: STATE.ENTERING_SECOND,\n        secondNumber:\n          state.secondNumber && state.secondNumber.substring(0, 1) === \"-\"\n            ? state.secondNumber.substring(1)\n            : \"-\" + (state.secondNumber || \"\")\n      };\n    case BUTTON.ADD:\n    case BUTTON.MULTIPLY:\n    case BUTTON.SUBTRACT:\n    case BUTTON.DIVIDE:\n    case BUTTON.EQUALS:\n      return runEquals(state, button);\n    default:\n      return state;\n  }\n}\n\nexport function nextState(state: State, button: BUTTON) {\n  switch (state.currentState) {\n    case STATE.ENTERING_FIRST:\n      return enteringFirst(state, button);\n      break;\n    case STATE.OPERATION:\n      return enteringOperation(state, button);\n      break;\n    case STATE.ENTERING_SECOND:\n      return enteringSecond(state, button);\n      break;\n    case STATE.ANSWER:\n      return enteringOperation(state, button);\n      break;\n    default:\n      return state;\n  }\n}\n","import React, { SyntheticEvent, ReactNode } from \"react\";\n/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\n\nexport enum ButtonType {\n  NUMBER,\n  OPERATION,\n  ACTION,\n  EQUALS\n}\n\nexport default function Button(props: {\n  children: ReactNode;\n  type?: ButtonType;\n  onPress: (evt: SyntheticEvent) => void;\n}) {\n  let background = \"transparent\";\n  let color = \"white\";\n  if (props.type) {\n    background = props.type === ButtonType.ACTION ? \"#373d45\" : \"#fed800\";\n    color = props.type === ButtonType.ACTION ? \"white\" : \"#333\";\n  }\n  return (\n    <div\n      onClick={props.onPress}\n      css={css`\n        width: 100%;\n        text-align: center;\n        cursor: pointer;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n\n        border-radius: 10px;\n        border: 10px solid white;\n        margin: 5px;\n        text-align: center;\n        font-size: 25px;\n        font-weight: 1000;\n        color: ${color};\n        cursor: pointer;\n        background: ${background};\n\n        &:hover {\n          box-shadow: 10px 10px 18px -6px rgba(233, 30, 99, 0.5);\n          z-index: 1000;\n        }\n\n        &:active {\n          box-shadow: inset 10px 10px 18px -6px rgba(233, 30, 99, 0.5);\n        }\n      `}\n    >\n      {props.children}\n    </div>\n  );\n}\n","import React, { SyntheticEvent, ReactNode } from \"react\";\nimport { BUTTON } from \"./utils/calculator\";\nimport Button, { ButtonType } from \"./Button\";\n/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\n\nfunction KeyboardRow(props: { children: ReactNode }) {\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-direction: row;\n        align-items: stretch;\n        justify-content: space-around;\n        width: 100%;\n        height: 100%;\n        min-height: 50px;\n        margin: auto;\n        &:last-child {\n          border-radius: 0px 0px 10px 10px;\n        }\n      `}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default function Keyboard(props: {\n  onPress: (key: BUTTON) => (evt: SyntheticEvent) => void;\n}) {\n  return (\n    <div\n      css={css`\n        width: 100%;\n        height: calc(100% - 80px);\n        display: flex;\n        flex-direction: column;\n        align-items: stretch;\n      `}\n    >\n      <KeyboardRow>\n        <Button type={ButtonType.ACTION} onPress={props.onPress(BUTTON.CLEAR)}>\n          AC\n        </Button>\n        <Button\n          type={ButtonType.ACTION}\n          onPress={props.onPress(BUTTON.PLUSMINUS)}\n        >\n          +/-\n        </Button>\n        <Button\n          type={ButtonType.ACTION}\n          onPress={props.onPress(BUTTON.PERCENT)}\n        >\n          %\n        </Button>\n        <Button\n          type={ButtonType.OPERATION}\n          onPress={props.onPress(BUTTON.DIVIDE)}\n        >\n          ÷\n        </Button>\n      </KeyboardRow>\n\n      <KeyboardRow>\n        <Button onPress={props.onPress(BUTTON.SEVEN)}>7</Button>\n        <Button onPress={props.onPress(BUTTON.EIGHT)}>8</Button>\n        <Button onPress={props.onPress(BUTTON.NINE)}>9</Button>\n        <Button\n          type={ButtonType.OPERATION}\n          onPress={props.onPress(BUTTON.MULTIPLY)}\n        >\n          ×\n        </Button>\n      </KeyboardRow>\n\n      <KeyboardRow>\n        <Button onPress={props.onPress(BUTTON.FOUR)}>4</Button>\n        <Button onPress={props.onPress(BUTTON.FIVE)}>5</Button>\n        <Button onPress={props.onPress(BUTTON.SIX)}>6</Button>\n        <Button\n          type={ButtonType.OPERATION}\n          onPress={props.onPress(BUTTON.SUBTRACT)}\n        >\n          -\n        </Button>\n      </KeyboardRow>\n\n      <KeyboardRow>\n        <Button onPress={props.onPress(BUTTON.ONE)}>1</Button>\n        <Button onPress={props.onPress(BUTTON.TWO)}>2</Button>\n        <Button onPress={props.onPress(BUTTON.THREE)}>3</Button>\n        <Button type={ButtonType.OPERATION} onPress={props.onPress(BUTTON.ADD)}>\n          +\n        </Button>\n      </KeyboardRow>\n\n      <KeyboardRow>\n        <Button onPress={props.onPress(0)}>0</Button>\n        <Button onPress={props.onPress(BUTTON.DOT)}>.</Button>\n        <Button onPress={props.onPress(BUTTON.EQUALS)}>=</Button>\n      </KeyboardRow>\n    </div>\n  );\n}\n","import React, { SyntheticEvent, PureComponent } from \"react\";\nimport Result from \"./Result\";\nimport Keyboard from \"./Keyboard\";\nimport { BUTTON, STATE, State, nextState } from \"./utils/calculator\";\n/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\n\nclass Calculator extends PureComponent<{}, State> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      currentState: STATE.ENTERING_FIRST,\n      firstNumber: \"\"\n    };\n  }\n\n  onPress = (key: BUTTON) => (evt: SyntheticEvent | Event) => {\n    this.setState(nextState(this.state, key));\n  };\n\n  onKeyPress = (evt: KeyboardEvent) => {\n    const keyMap: { [key: string]: BUTTON } = {\n      \"0\": BUTTON.ZERO,\n      \"1\": BUTTON.ONE,\n      \"2\": BUTTON.TWO,\n      \"3\": BUTTON.THREE,\n      \"4\": BUTTON.FOUR,\n      \"5\": BUTTON.FIVE,\n      \"6\": BUTTON.SIX,\n      \"7\": BUTTON.SEVEN,\n      \"8\": BUTTON.EIGHT,\n      \"9\": BUTTON.NINE,\n      \"+\": BUTTON.ADD,\n      \"-\": BUTTON.SUBTRACT,\n      \"*\": BUTTON.MULTIPLY,\n      \"/\": BUTTON.DIVIDE,\n      \"%\": BUTTON.PERCENT,\n      \"=\": BUTTON.EQUALS,\n      Enter: BUTTON.EQUALS,\n      Escape: BUTTON.CLEAR\n    };\n    if (keyMap[evt.key] !== undefined) {\n      this.onPress(keyMap[evt.key])(evt);\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.onKeyPress, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.onKeyPress, false);\n  }\n\n  displayResult() {\n    switch (this.state.currentState) {\n      case STATE.ENTERING_FIRST:\n        return <Result result={this.state.firstNumber} />;\n      case STATE.OPERATION:\n        return <Result result={this.state.firstNumber} />;\n      case STATE.ENTERING_SECOND:\n        return <Result result={this.state.secondNumber} />;\n      case STATE.ANSWER:\n        return <Result result={this.state.answer} />;\n    }\n  }\n\n  render() {\n    return (\n      <div\n        css={css`\n          width: 100%;\n          height: 100%;\n          max-width: 500px;\n          max-height: 800px;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: flex-start;\n        `}\n      >\n        {this.displayResult()}\n        <Keyboard onPress={this.onPress} />\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Calculator from \"./Calculator\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}